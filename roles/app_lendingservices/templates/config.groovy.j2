{% set collation = "&characterEncoding=latin1&connectionCollation=latin1_swedish_ci" if collation else "" %}
def dbURL = "jdbc:mysql://{{ database.hostname }}/{{ database_schema }}?noAccessToProcedureBodies=true&useSSL=false&zeroDateTimeBehavior=convertToNull{{ collation }}"
def dbUser = "{{ database.username }}"
def dbPwd = "{{ database.password }}"

mail.error.subject = '[LendingServices Error: {{ client|upper }}-{{ env|upper }}]'

dataSource {
    url = dbURL
    username = dbUser
    password = dbPwd
}

cors.enabled = false

lendingComponents.rules.filename = "latest"
lendingComponents.datasource.url = dbURL
lendingComponents.datasource.username = dbUser
lendingComponents.datasource.password = dbPwd

grails.plugin.awssdk.accessKey = "AKIAI7N2O45I3WNIJXNA"
grails.plugin.awssdk.secretKey = "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"

grails.plugin.springsecurity.rest.token.storage.useMemcached = false  // override default setting in Config.groovy
grails.plugin.springsecurity.rest.token.storage.jwt.expiration = 1800

publish.activity.externalservice.enabled = true
docVelocity.enabled = false
paradatec.enabled = false

mnAppraisal.activeMQ.receiveQueue = "activemq:{{ activemq_core_logic }}"

docpath.host="docpath2.bluesageusa.com"
grails.plugin.routing.jms.brokerURL = "tcp://vendor-postback5.bluesageusa.com:61616"