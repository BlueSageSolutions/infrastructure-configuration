---
- name: Bootstrap
  hosts: localhost
  gather_facts: no
  vars:
    authentication_domain_id: 0f4dda55-888e-4f4d-abba-ac7b3417faba
    client_management_group_name: ClientAccountManagement
    client_readonly_group_name: ClientAccountReadonly
    all_product_admin_role_id: 1254
    read_only_role_id: 1252
  tasks:
    - name: Get New Relic Service Account Key
      delegate_to: localhost
      run_once: true
      shell: |
        API_KEY=$(aws ssm get-parameter --name /secrets/new_relic/api_key --with-decryption --query "Parameter.Value" --output text)

        if [ -z "$API_KEY" ]; then
          echo Unable to read api key, are you logged in and able to read from bss-devops account?
          exit 1
        fi

        echo $API_KEY
      register: api_key

    - name: Set Api Key as Fact
      run_once: true
      set_fact:
        api_key: "{{ api_key.stdout }}"

    - name: Get Client Account Id
      delegate_to: localhost
      run_once: true
      shell: |
        QUERY_ACCOUNT_RESPONSE=$(curl https://api.newrelic.com/graphql \
          -H 'Content-Type: application/json' \
          -H 'API-Key: {{api_key}}' \
          --data-binary '{
                            "query": "{actor {organization {accountManagement {managedAccounts(isCanceled: false) {name id}}}}}",
                            "variables": ""
                        }'
        )

        CLIENT_ACCOUNT_METADATA=$(echo $QUERY_ACCOUNT_RESPONSE | jq '.data.actor.organization.accountManagement.managedAccounts.[] | select(.name == "{{ client_code | lower }}")')

        echo $(echo $CLIENT_ACCOUNT_METADATA | jq -r '.id')
        
      register: account_id

    - name: Set Account Id as Fact
      delegate_to: localhost
      run_once: true
      set_fact:
        account_id: "{{ account_id.stdout | from_json }}"
    
    - debug:
        var: account_id

    - name: Query New Relic Groups
      delegate_to: localhost
      run_once: true
      shell: |
        QUERY_GROUP_RESPONSE=$(curl https://api.newrelic.com/graphql \
          -H 'Content-Type: application/json' \
          -H 'API-Key: {{api_key}}' \
          --data-binary '{
                          "query": "{actor {organization {userManagement {authenticationDomains(id: \"{{ authentication_domain_id }}\") {authenticationDomains {groups {groups {displayName id users {users {name id}}}}}}}}}}",
                          "variables": ""
                        }'
        )
        echo $QUERY_GROUP_RESPONSE
      register: query_new_relic_groups

    - name: Set Query Group as Fact
      delegate_to: localhost
      run_once: true
      set_fact:
        query_group: "{{ query_new_relic_groups.stdout | from_json }}"

    - name: Get client_management_group_name group id
      delegate_to: localhost
      run_once: true
      shell: |
        CLIENT_MANAGEMENT_GROUP=$(echo '{{ query_group | to_json }}' | jq -r '.data.actor.organization.userManagement.authenticationDomains.authenticationDomains.[0].groups.groups.[] | select(.displayName == "{{ client_management_group_name }}") | .id')
        echo $CLIENT_MANAGEMENT_GROUP
      register: client_management_group_id

    - name: set client_management_group_id fact
      set_fact:
        client_management_group_id: "{{ client_management_group_id.stdout }}"

    - name: Get client_readonly_group_name group id
      delegate_to: localhost
      run_once: true
      shell: |
        CLIENT_READONLY_GROUP=$(echo '{{ query_group | to_json }}' | jq -r '.data.actor.organization.userManagement.authenticationDomains.authenticationDomains.[0].groups.groups.[] | select(.displayName == "{{ client_readonly_group_name }}") | .id')
        echo $CLIENT_READONLY_GROUP
      register: client_readonly_group_id

    - name: set client_readonly_group_id fact
      set_fact:
        client_readonly_group_id: "{{ client_readonly_group_id.stdout }}"

    - name: Update client_management_group_name Permissions
      delegate_to: localhost
      run_once: true
      shell: |
        UPDATE_PERMISSIONS_RESPONSE=$(curl https://api.newrelic.com/graphql \
          -H 'Content-Type: application/json' \
          -H 'API-Key: {{api_key}}' \
          --data-binary '{
                            "query": "mutation {authorizationManagementGrantAccess(grantAccessOptions: {groupId: \"{{client_management_group_id}}\" accountAccessGrants: {accountId: {{ account_id }} roleId: \"{{all_product_admin_role_id}}\"}}) {roles {displayName accountId}}}",
                            "variables": ""
                        }'
        )

    - name: Update client_readonly_group_name Permissions
      delegate_to: localhost
      run_once: true
      shell: |
        UPDATE_PERMISSIONS_RESPONSE=$(curl https://api.newrelic.com/graphql \
          -H 'Content-Type: application/json' \
          -H 'API-Key: {{api_key}}' \
          --data-binary '{
                            "query": "mutation {authorizationManagementGrantAccess(grantAccessOptions: {groupId: \"{{client_readonly_group_id}}\" accountAccessGrants: {accountId: {{ account_id }} roleId: \"{{read_only_role_id}}\"}}) {roles {displayName accountId}}}",
                            "variables": ""
                        }'
        )